name: deploy-core

on:
  push:
    branches:
      - main

jobs:
  # label of the container job
  test-e2e:
    # containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `postgres-job` executes in
    container: node:latest

    # service containers to run with `postgres-job`
    services:
      # label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:latest
        # service environment variables
        # `POSTGRES_HOST` is `postgres`
        env:
          # optional (defaults to `postgres`)
          POSTGRES_DB: prisma
          # required
          POSTGRES_PASSWORD: prisma
          # optional (defaults to `5432`)
          POSTGRES_PORT: 5432
          # optional (defaults to `postgres`)
          POSTGRES_USER: prisma
        ports:
          # maps tcp port 5432 on service container to the host
          - 5432:5432
        # set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Install yarn dependencies
        run: cd core && yarn install
      - name: Run Test
        run: cd core && yarn run test:e2e
        env:
          SECRET: "as'padlawawaodwkpa"
          DATABASE_URL: "postgresql://prisma:prisma@postgres:5432/prisma?schema=public"
  deploy:
    runs-on: ubuntu-latest
    needs:
      - test-e2e
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Deploy to heroku
        uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "big-mushroom" #Must be unique in Heroku
          heroku_email: "mjkmo666@gmail.com"
          branch: "main"
          appdir: "core"
